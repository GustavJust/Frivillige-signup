---
import Button from "./button.astro";
// import FAQScript from "../../public/scripts/faq.js";

const {
  overskrift = "Default Overskrift",
  desc = "Default Desc",
  imgSrc,
  imgAlt,
  subheader = "Default Subheader",
} = Astro.props;
---

<div class="drop_menu">
  <hr />
  <div class="drop_collapse">
    <h3>{overskrift}</h3>
    <button class="faq-toggle">
      <svg
        width="16"
        height="31"
        viewBox="0 0 16 31"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M7.36008 1.94336C8.16631 9.97708 8.1958 17.9447 8.1958 26.0007"
          stroke="#006AFA"
          stroke-width="2.86399"
          stroke-linecap="round"></path>
        <path
          d="M13.6279 20.8604C12.7928 22.504 11.5801 24.0416 10.5752 25.5896C9.76708 26.8343 8.80869 27.6593 7.77776 28.6738"
          stroke="#006AFA"
          stroke-width="2.86399"
          stroke-linecap="round"></path>
        <path
          d="M7.98682 28.2628C5.71442 25.691 3.78539 22.9554 1.71879 20.2437"
          stroke="#006AFA"
          stroke-width="2.86399"
          stroke-linecap="round"></path>
      </svg>
    </button>
  </div>
  <div class="faq-content">
    <div class="image_container">
      <img src={imgSrc} alt={imgAlt} class="dropdown-img" />
    </div>
    <div class="drop_content">
      <h4>{subheader}</h4>
      <p>{desc}</p>
      <Button text="LÃ¦s mere" stroke="var(--primary-color)" fill="none" />
      <br />
    </div>
  </div>
</div>
<script src="/scripts/faq.js" defer></script>

<style>
  button {
    background-color: transparent;
    border: none;
    color: transparent;
  }
  hr {
    border: 1px solid var(--primary-color);
    width: 100%;
  }
  .drop_menu {
    /* border: 1px solid red; */
    display: flex;
    flex-direction: column;
    overflow: hidden;

    > .image_container {
      width: 100%;
      margin: var(--text-spacing) 0;
      overflow: hidden;
    }

    > p {
      margin: 0 0 2em 0;
      color: var(--text-base-dark);
    }

    > .drop_content {
      margin: 0 var(--inner-padding);
    }
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .drop_collapse {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 var(--inner-padding);
    padding: var(--inner-padding);
  }
  h3,
  h4 {
    -webkit-text-stroke: 0.5px var(--text-base-dark); /* Adds a thin black outline */
    color: var(--text-base-dark); /* Adjust for readability */
    margin: 0;
  }
  h4 {
    margin: var(--text-spacing) 0;
  }
  .faq-content {
    max-height: 0; /* Start hidden */
    overflow: hidden;
    transition:
      max-height 0.3s ease-in-out,
      padding 0.3s ease-in-out;
    padding: 0; /* Remove padding when hidden */
    opacity: 0;
  }

  .faq-content.show {
    max-height: 500px; /* Set a high enough value */
    padding: var(--inner-padding);
    opacity: 1;
  }

  @media (min-width: 768px) {
    .faq-content {
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: var(--inner-padding);
    }

    .image_container {
      grid-column: 1;
    }

    .drop_content {
      grid-column: 2;
    }
  }
</style>
